/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formulario;

import BaseDatos.Conexion;
import BaseDatos.ConexionPokemon;
import Dominio.mdPokemon;
import java.io.File;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.*;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.activation.DataHandler;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Usuario
 */
public class Registro extends javax.swing.JFrame {

    /**
     * Creates new form Registro
     */
    public Registro() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonGenerar = new javax.swing.JButton();
        jButtonAdjuntar = new javax.swing.JButton();
        jTextFieldCorreo = new javax.swing.JTextField();
        jButtonBusqueda = new javax.swing.JButton();
        jTextFieldBusqueda = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePo = new javax.swing.JTable();
        jButtonPokemones = new javax.swing.JButton();
        jComboBoxBuscar = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonGenerar.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jButtonGenerar.setText("Generar");
        jButtonGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonGenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 150, 100, -1));

        jButtonAdjuntar.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jButtonAdjuntar.setText("Enviar");
        jButtonAdjuntar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdjuntarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAdjuntar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 190, -1, -1));
        getContentPane().add(jTextFieldCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 150, -1));

        jButtonBusqueda.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jButtonBusqueda.setText("Busqueda");
        jButtonBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBusquedaActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 230, 100, -1));
        getContentPane().add(jTextFieldBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 150, -1));

        jTablePo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTablePo);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 503, 160));

        jButtonPokemones.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jButtonPokemones.setText("Pokemones");
        jButtonPokemones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPokemonesActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonPokemones, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, -1, 40));

        jComboBoxBuscar.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jComboBoxBuscar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Generacion", "Color", "Especie", "Habitat", "Rate Capture", "Exp Base" }));
        jComboBoxBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 150, -1, -1));

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel1.setText("Correo");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel2.setText("Buscar");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial Black", 1, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 204, 255));
        jLabel4.setText("Registro Pokemones");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon("C:\\Users\\Usuario\\Desktop\\1-Uds-reci-n-llegado-dibujos-animados-moda-Pokemon-serie-Transferencia-de-Calor-impresi-n-adhesivo.jpg_640x640.jpg")); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    String Val;
    String P;
    String B;
    String tab[][];
    ConexionPokemon CPOK = new ConexionPokemon();
    
    private void jButtonGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarActionPerformed
        try {   
            Connection c = null;
            c = Conexion.getConnection();           
            JasperReport report = null;
            String path = "src\\main\\java\\com\\mycompany\\proyecto\\report1.jasper";           
            report = (JasperReport) JRLoader.loadObjectFromFile(path);        
            JasperPrint jprint = JasperFillManager.fillReport(report, null, c);   
            JasperViewer view = new JasperViewer(jprint, false);
            view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            view.setVisible(true);
            
        } catch (JRException | SQLException ex){
            Logger.getLogger(Registro.class.getName()).log(Level.SEVERE, null, ex);
        }      
    }//GEN-LAST:event_jButtonGenerarActionPerformed

    
    
    private void jButtonAdjuntarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdjuntarActionPerformed
        try {
            Properties propiedad = new Properties();
            propiedad.setProperty("mail.smtp.host", "smtp.gmail.com");
            propiedad.setProperty("mail.smtp.starttls.enable", "true");
            propiedad.setProperty("mail.smtp.port", "587");
            propiedad.setProperty("mail.smtp.auth", "true");
            propiedad.setProperty("mail.smtp.ssl.protocols", "TLSv1.2");

            Session session = Session.getDefaultInstance(propiedad);

            String correoRemitente = "probandoprueba111@gmail.com";
            String passwordRemitente = "prueba2021";
            String correoReceptor = jTextFieldCorreo.getText();
            String asunto = "Registro pokemon";
            String mensaje = "Entrenador este es el registro de pokemones";
           
            BodyPart t =new MimeBodyPart();
            t.setText(mensaje);
            
            BodyPart A = new MimeBodyPart();
            A.setDataHandler(new  DataHandler(new FileDataSource("C:/Users/Usuario/Desktop/Proyecto Pokemon/Registro Pokemon.pdf")));
 
            A.setFileName("Registro Pokemon.pdf");
               
            MimeMultipart MUL = new MimeMultipart();
            MUL.addBodyPart(t);
            MUL.addBodyPart(A);
            
            MimeMessage message = new MimeMessage(session);
            message.setFrom(new InternetAddress(correoRemitente));

            message.addRecipient(Message.RecipientType.TO, new InternetAddress(correoReceptor));
            message.setSubject(asunto);
            message.setContent(MUL);
         
            Transport co = session.getTransport("smtp");
            co.connect(correoRemitente, passwordRemitente);
            co.sendMessage(message, message.getRecipients(Message.RecipientType.TO));
            co.close();

            JOptionPane.showMessageDialog(null, "El correo se ha enviado");

        } catch (AddressException ex) {
            Logger.getLogger(Registro.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MessagingException ex) {
            Logger.getLogger(Registro.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }//GEN-LAST:event_jButtonAdjuntarActionPerformed
    
    
    private void jButtonBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBusquedaActionPerformed
  
        if("".equals(jTextFieldBusqueda.getText())){
            JOptionPane.showMessageDialog(null,"Llena el campo vacio");
        }
        else{
            String encabezado []={"Id","Nombre","Generacion","Especie","Color","Habitat","RateCapture","ExpBase"};
            Val=jTextFieldBusqueda.getText();
            List<mdPokemon> Pokemones = CPOK.BusquedaPoke (B,Val);
            tab=new String[Pokemones.size()][8];
            int acumulador=0;

            if(Pokemones==null || Pokemones.isEmpty()){
                JOptionPane.showMessageDialog(null,"El dato no se encuentra");
            }
            else{
                for (mdPokemon Poke : Pokemones) {
                    tab[acumulador][0]=Poke.getId();
                    tab[acumulador][1]=Poke.getNombre();
                    tab[acumulador][2]=Poke.getGeneracion();
                    tab[acumulador][3]=Poke.getEspecie();
                    tab[acumulador][4]=Poke.getColor();
                    tab[acumulador][5]=Poke.getHabitat();
                    tab[acumulador][6]=Poke.getRateCapture();
                    tab[acumulador][7]=Poke.getExpBase();
                    acumulador++;
                    jTablePo.setModel(new DefaultTableModel(tab,encabezado));
                }
            }
        }
    }//GEN-LAST:event_jButtonBusquedaActionPerformed

    private void jButtonPokemonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPokemonesActionPerformed
        
        String encabezado []={"Id","Nombre","Generacion","Especie","Color","Habitat","RateCapture","ExpBase"};
        List<mdPokemon> Pokemones = CPOK.SeleccionarTodo();
        tab=new String[Pokemones.size()][8];
        int acumulador=0;
        for (mdPokemon Poke : Pokemones) {
            tab[acumulador][0]=Poke.getId();
            tab[acumulador][1]=Poke.getNombre();
            tab[acumulador][2]=Poke.getGeneracion();
            tab[acumulador][3]=Poke.getEspecie();
            tab[acumulador][4]=Poke.getColor();
            tab[acumulador][5]=Poke.getHabitat();
            tab[acumulador][6]=Poke.getRateCapture();
            tab[acumulador][7]=Poke.getExpBase();
            acumulador++;
            jTablePo.setModel(new DefaultTableModel(tab,encabezado));
        }
    }//GEN-LAST:event_jButtonPokemonesActionPerformed

    private void jComboBoxBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBuscarActionPerformed
        P=jComboBoxBuscar.getSelectedItem().toString();
        if("Nombre".equals(P)){
            B = "name";
        }
        else if("Generacion".equals(P)){
            B = "generation_id";
        }
        else if("Color".equals(P)){
            B = "color";
        }
        else if("Especie".equals(P)){
            B = "species";
        }
        else if("Habitat".equals(P)){
            B = "habitat";
        }
        else if("Rate Capure".equals(P)){
            B = "capture_rate";
        }
        else if("Exp Base".equals(P)){
            B = "base_experience";
        }
    }//GEN-LAST:event_jComboBoxBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdjuntar;
    private javax.swing.JButton jButtonBusqueda;
    private javax.swing.JButton jButtonGenerar;
    private javax.swing.JButton jButtonPokemones;
    private javax.swing.JComboBox<String> jComboBoxBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTablePo;
    private javax.swing.JTextField jTextFieldBusqueda;
    private javax.swing.JTextField jTextFieldCorreo;
    // End of variables declaration//GEN-END:variables
}
